/*********************************************************************
 * Name:      	main.h
 * Purpose:   	Declares simple wxWidgets application with GUI
 * 				created using wxFormBuilder.
 * Author:    
 * Created:   
 * Copyright: 
 * License:   	wxWidgets license (www.wxwidgets.org)
 * 
 * Notes:		Note that all GUI creation code is declared in
 * 				gui.h source file which is generated by wxFormBuilder.
 *********************************************************************/
 
#ifndef __main__
#define __main__

// main wxWidgets header file
#include <wx/wx.h>
// gui classes generated by wxFormBuilder
#include "gui.h"
#include "tinyxml/tinyxml.h"
#include <wx/treebase.h>

////////////////////////////////////////////////////////////////////////////////
// application class declaration 
////////////////////////////////////////////////////////////////////////////////

class MainApp : public wxApp
{
	public:
		virtual bool OnInit();
};

// declare global static function wxGetApp()
DECLARE_APP(MainApp)

////////////////////////////////////////////////////////////////////////////////
// main application frame declaration 
////////////////////////////////////////////////////////////////////////////////
class myTreeItemElements;
class myTreeItemData;

class MainDialog : public MainDialogBase
{
public:
	enum head {ROOT, ROUTE, ROUTEPOINT, TRACK, TRACKSEGMENT, TRACKPOINT, WAYPOINT, LINKS };
	
		MainDialog( wxWindow *parent );
		~MainDialog();
		
		void appendXMLElement(TiXmlNode* node, wxTreeCtrl* tree, wxTreeItemId root, unsigned int indent = 0);
		myTreeItemElements* getElementsItemData(wxTreeItemId id);	
		myTreeItemData* getDirTreeItemData(wxTreeItemId id);		

		bool modified;
		bool textModified;
		
		wxString textPath;
		
	protected:
		// protected event handlers
		virtual void OnCloseDialog( wxCloseEvent& event );
		virtual void OnOKClick( wxCommandEvent& event );
		virtual void OnCancelClick( wxCommandEvent& event );
		void OnButtonClickLayerDir( wxCommandEvent& event );
		void OnTreeSelectionChangedLayerTree( wxTreeEvent& event );
		void OnTreeSelectionChangedElementsTree( wxTreeEvent& event );
		void OnTreeItemActivatedLayerElements( wxTreeEvent& event );
		void OnButtonClickSaveLayerElements( wxCommandEvent& event );
		void OnTreeItemRightClickLayerElements( wxTreeEvent& event );
		void onTreeItemRightClickDirTree( wxTreeEvent& event );	
		void OnMenuSelectionElementsDelete( wxCommandEvent& event );
		void OnMenuSelectionDirTreeDelete( wxCommandEvent& event );
		void OnTreeBeginnDragFile( wxTreeEvent& event );	
		void OnMenuSeletionAddText( wxCommandEvent& event );
		void OnButtonClickNewLayer( wxCommandEvent& event );		
		void OnTreeEndLabelEditElements( wxTreeEvent& event );	
		void OnTreeEndLabelEditDirTree( wxTreeEvent& event );
		void OnTreeItemActivatedDirTree( wxTreeEvent& event );		
		void OnInit( wxInitDialogEvent& event );		
		
private:		
		void fillDirTree(wxString str);
		void fillDirRecursive(wxTreeItemId root, wxString str);
		wxTreeItemId findTreeItem(wxTreeCtrl* pTreeCtrl, const wxTreeItemId& root, const wxString& text, bool bCaseSensitive, bool bExactMatch);
		void writeXml();
		wxTreeItemId recursiveWrite(wxTreeItemId id,TiXmlElement *elem,TiXmlElement *root);
		void addElement(TiXmlElement *root, wxString key, wxString label);
		void checkLinks(TiXmlElement *elem, wxTreeItemId item);
};

class myTreeItemData : public wxTreeItemData
{
public:
	myTreeItemData(wxString filepath) : path(filepath){}
	
	wxString path;
};

class myTreeItemElements : public wxTreeItemData
{
public:
	myTreeItemElements() { name = _T(""); }

	int 	 head;
	wxString lat;
	wxString lon;
	wxString dateTime;
	wxString name;
	wxString desc;
	wxString sym;
	wxString type;
	wxString viz;
	wxString vizName;
	wxString guid;
	wxString start;
	wxString end;
	wxString auto_name;
	wxString shared;
	
	wxString file;
	wxString text;
};

#endif //__main__
